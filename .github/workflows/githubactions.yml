name: MagicShop CI/CD

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install --frozen-lockfile

      - name: Run tests
        run: npm run test

      - name: Build Next.js app
        run: npm run build

  automerge:
    needs: build
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest

    steps:
      - name: Wait for GitHub to determine mergeability and attempt merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          script: |
            const pr_number = context.payload.pull_request.number;
            let pr;
            let attempts = 5;

            for (let i = 0; i < attempts; i++) {
              const result = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number
              });
              pr = result.data;

              if (pr.mergeable_state && pr.mergeable_state !== 'unknown') {
                break;
              }

              console.log(`Attempt ${i + 1}: mergeable_state is '${pr.mergeable_state}', waiting...`);
              await new Promise(r => setTimeout(r, 5000)); // espera 5 segundos
            }

            if (pr.state === 'open' && pr.mergeable_state === 'clean') {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
                merge_method: 'squash'
              });
              console.log(`✅ PR #${pr_number} merged successfully.`);
            } else {
              console.log(`⚠️ PR #${pr_number} not mergeable: ${pr.mergeable_state}`);
            }
